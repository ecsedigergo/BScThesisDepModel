/*
 * generated by Xtext 2.9.2
 */
grammar InternalDepModel;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package hu.bme.mit.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package hu.bme.mit.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import hu.bme.mit.services.DepModelGrammarAccess;

}

@parser::members {

 	private DepModelGrammarAccess grammarAccess;

    public InternalDepModelParser(TokenStream input, DepModelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DepModel";
   	}

   	@Override
   	protected DepModelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDepModel
entryRuleDepModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDepModelRule()); }
	iv_ruleDepModel=ruleDepModel
	{ $current=$iv_ruleDepModel.current; }
	EOF;

// Rule DepModel
ruleDepModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDepModelAccess().getElementsAbstractElementParserRuleCall_0());
			}
			lv_elements_0_0=ruleAbstractElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDepModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"hu.bme.mit.DepModel.AbstractElement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	iv_ruleAbstractElement=ruleAbstractElement
	{ $current=$iv_ruleAbstractElement.current; }
	EOF;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getComponentModelDecParserRuleCall_0());
		}
		this_ComponentModelDec_0=ruleComponentModelDec
		{
			$current = $this_ComponentModelDec_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getPortTypeParserRuleCall_1());
		}
		this_PortType_1=rulePortType
		{
			$current = $this_PortType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePortType
entryRulePortType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortTypeRule()); }
	iv_rulePortType=rulePortType
	{ $current=$iv_rulePortType.current; }
	EOF;

// Rule PortType
rulePortType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='port'
		{
			newLeafNode(otherlv_0, grammarAccess.getPortTypeAccess().getPortKeyword_0());
		}
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getPortTypeAccess().getTypeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPortTypeAccess().getPortNameQualifiedNameParserRuleCall_2_0());
				}
				lv_PortName_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortTypeRule());
					}
					set(
						$current,
						"PortName",
						lv_PortName_2_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPortTypeAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getPortTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleComponentModelDec
entryRuleComponentModelDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentModelDecRule()); }
	iv_ruleComponentModelDec=ruleComponentModelDec
	{ $current=$iv_ruleComponentModelDec.current; }
	EOF;

// Rule ComponentModelDec
ruleComponentModelDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComponentModelDecAccess().getSystemConnDecParserRuleCall_0());
		}
		this_SystemConnDec_0=ruleSystemConnDec
		{
			$current = $this_SystemConnDec_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentModelDecAccess().getSystemDecParserRuleCall_1());
		}
		this_SystemDec_1=ruleSystemDec
		{
			$current = $this_SystemDec_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSystemConnDec
entryRuleSystemConnDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemConnDecRule()); }
	iv_ruleSystemConnDec=ruleSystemConnDec
	{ $current=$iv_ruleSystemConnDec.current; }
	EOF;

// Rule SystemConnDec
ruleSystemConnDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemConnDecAccess().getSystemKeyword_0());
		}
		otherlv_1='connection'
		{
			newLeafNode(otherlv_1, grammarAccess.getSystemConnDecAccess().getConnectionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemConnDecAccess().getSysConnNameQualifiedNameParserRuleCall_2_0());
				}
				lv_SysConnName_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemConnDecRule());
					}
					set(
						$current,
						"SysConnName",
						lv_SysConnName_2_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='from'
		{
			newLeafNode(otherlv_3, grammarAccess.getSystemConnDecAccess().getFromKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemConnDecRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getSystemConnDecAccess().getSourceSystemSystemDecCrossReference_4_0());
				}
			)
		)
		otherlv_5='.'
		{
			newLeafNode(otherlv_5, grammarAccess.getSystemConnDecAccess().getFullStopKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemConnDecRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getSystemConnDecAccess().getSourcePortSystemPortDecCrossReference_6_0());
				}
			)
		)
		otherlv_7='to'
		{
			newLeafNode(otherlv_7, grammarAccess.getSystemConnDecAccess().getToKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemConnDecRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getSystemConnDecAccess().getTargetSystemSystemDecCrossReference_8_0());
				}
			)
		)
		otherlv_9='.'
		{
			newLeafNode(otherlv_9, grammarAccess.getSystemConnDecAccess().getFullStopKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemConnDecRule());
					}
				}
				otherlv_10=RULE_ID
				{
					newLeafNode(otherlv_10, grammarAccess.getSystemConnDecAccess().getTargetPortSystemPortDecCrossReference_10_0());
				}
			)
		)
	)
;

// Entry rule entryRuleSystemDec
entryRuleSystemDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemDecRule()); }
	iv_ruleSystemDec=ruleSystemDec
	{ $current=$iv_ruleSystemDec.current; }
	EOF;

// Rule SystemDec
ruleSystemDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemDecAccess().getSystemKeyword_0());
		}
		otherlv_1='declaration'
		{
			newLeafNode(otherlv_1, grammarAccess.getSystemDecAccess().getDeclarationKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemDecAccess().getSysNameQualifiedNameParserRuleCall_2_0());
				}
				lv_SysName_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemDecRule());
					}
					set(
						$current,
						"SysName",
						lv_SysName_2_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSystemDecAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemDecAccess().getSysFeaturesSysFeaturesDecParserRuleCall_4_0());
				}
				lv_sysFeatures_4_0=ruleSysFeaturesDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemDecRule());
					}
					add(
						$current,
						"sysFeatures",
						lv_sysFeatures_4_0,
						"hu.bme.mit.DepModel.SysFeaturesDec");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSystemDecAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSysFeaturesDec
entryRuleSysFeaturesDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSysFeaturesDecRule()); }
	iv_ruleSysFeaturesDec=ruleSysFeaturesDec
	{ $current=$iv_ruleSysFeaturesDec.current; }
	EOF;

// Rule SysFeaturesDec
ruleSysFeaturesDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSysFeaturesDecAccess().getSystemPortDecParserRuleCall_0());
		}
		this_SystemPortDec_0=ruleSystemPortDec
		{
			$current = $this_SystemPortDec_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSysFeaturesDecAccess().getComponentConnDecParserRuleCall_1());
		}
		this_ComponentConnDec_1=ruleComponentConnDec
		{
			$current = $this_ComponentConnDec_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSysFeaturesDecAccess().getComponentTypeParserRuleCall_2());
		}
		this_ComponentType_2=ruleComponentType
		{
			$current = $this_ComponentType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSysFeaturesDecAccess().getComponentImplParserRuleCall_3());
		}
		this_ComponentImpl_3=ruleComponentImpl
		{
			$current = $this_ComponentImpl_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSystemPortDec
entryRuleSystemPortDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemPortDecRule()); }
	iv_ruleSystemPortDec=ruleSystemPortDec
	{ $current=$iv_ruleSystemPortDec.current; }
	EOF;

// Rule SystemPortDec
ruleSystemPortDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSystemPortDecAccess().getSystemPortInParserRuleCall_0());
		}
		this_SystemPortIn_0=ruleSystemPortIn
		{
			$current = $this_SystemPortIn_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSystemPortDecAccess().getSystemPortOutParserRuleCall_1());
		}
		this_SystemPortOut_1=ruleSystemPortOut
		{
			$current = $this_SystemPortOut_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSystemPortIn
entryRuleSystemPortIn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemPortInRule()); }
	iv_ruleSystemPortIn=ruleSystemPortIn
	{ $current=$iv_ruleSystemPortIn.current; }
	EOF;

// Rule SystemPortIn
ruleSystemPortIn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemPortInAccess().getSystemKeyword_0());
		}
		otherlv_1='port'
		{
			newLeafNode(otherlv_1, grammarAccess.getSystemPortInAccess().getPortKeyword_1());
		}
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemPortInAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemPortInAccess().getSysPortInNameQualifiedNameParserRuleCall_3_0());
				}
				lv_SysPortInName_3_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemPortInRule());
					}
					set(
						$current,
						"SysPortInName",
						lv_SysPortInName_3_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='to'
		{
			newLeafNode(otherlv_4, grammarAccess.getSystemPortInAccess().getToKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemPortInRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getSystemPortInAccess().getInCompComponentImplCrossReference_5_0());
				}
			)
		)
		otherlv_6='.'
		{
			newLeafNode(otherlv_6, grammarAccess.getSystemPortInAccess().getFullStopKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemPortInRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getSystemPortInAccess().getInPortPortInCrossReference_7_0());
				}
			)
		)
	)
;

// Entry rule entryRuleSystemPortOut
entryRuleSystemPortOut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemPortOutRule()); }
	iv_ruleSystemPortOut=ruleSystemPortOut
	{ $current=$iv_ruleSystemPortOut.current; }
	EOF;

// Rule SystemPortOut
ruleSystemPortOut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemPortOutAccess().getSystemKeyword_0());
		}
		otherlv_1='port'
		{
			newLeafNode(otherlv_1, grammarAccess.getSystemPortOutAccess().getPortKeyword_1());
		}
		otherlv_2='out'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemPortOutAccess().getOutKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemPortOutAccess().getSysPortOutNameQualifiedNameParserRuleCall_3_0());
				}
				lv_SysPortOutName_3_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemPortOutRule());
					}
					set(
						$current,
						"SysPortOutName",
						lv_SysPortOutName_3_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='from'
		{
			newLeafNode(otherlv_4, grammarAccess.getSystemPortOutAccess().getFromKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemPortOutRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getSystemPortOutAccess().getOutCompComponentImplCrossReference_5_0());
				}
			)
		)
		otherlv_6='.'
		{
			newLeafNode(otherlv_6, grammarAccess.getSystemPortOutAccess().getFullStopKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemPortOutRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getSystemPortOutAccess().getOutPortPortOutCrossReference_7_0());
				}
			)
		)
	)
;

// Entry rule entryRuleComponentConnDec
entryRuleComponentConnDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentConnDecRule()); }
	iv_ruleComponentConnDec=ruleComponentConnDec
	{ $current=$iv_ruleComponentConnDec.current; }
	EOF;

// Rule ComponentConnDec
ruleComponentConnDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='component'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentConnDecAccess().getComponentKeyword_0());
		}
		otherlv_1='connection'
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentConnDecAccess().getConnectionKeyword_1());
		}
		(
			(
				lv_CompConnName_2_0=RULE_ID
				{
					newLeafNode(lv_CompConnName_2_0, grammarAccess.getComponentConnDecAccess().getCompConnNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentConnDecRule());
					}
					setWithLastConsumed(
						$current,
						"CompConnName",
						lv_CompConnName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='from'
		{
			newLeafNode(otherlv_3, grammarAccess.getComponentConnDecAccess().getFromKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentConnDecRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getComponentConnDecAccess().getSourceCompComponentImplCrossReference_4_0());
				}
			)
		)
		otherlv_5='.'
		{
			newLeafNode(otherlv_5, grammarAccess.getComponentConnDecAccess().getFullStopKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentConnDecRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getComponentConnDecAccess().getSourcePortPortOutCrossReference_6_0());
				}
			)
		)
		otherlv_7='to'
		{
			newLeafNode(otherlv_7, grammarAccess.getComponentConnDecAccess().getToKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentConnDecRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getComponentConnDecAccess().getTargetCompComponentImplCrossReference_8_0());
				}
			)
		)
		otherlv_9='.'
		{
			newLeafNode(otherlv_9, grammarAccess.getComponentConnDecAccess().getFullStopKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentConnDecRule());
					}
				}
				otherlv_10=RULE_ID
				{
					newLeafNode(otherlv_10, grammarAccess.getComponentConnDecAccess().getTargetPortPortInCrossReference_10_0());
				}
			)
		)
	)
;

// Entry rule entryRuleComponentImpl
entryRuleComponentImpl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentImplRule()); }
	iv_ruleComponentImpl=ruleComponentImpl
	{ $current=$iv_ruleComponentImpl.current; }
	EOF;

// Rule ComponentImpl
ruleComponentImpl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='component'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentImplAccess().getComponentKeyword_0());
		}
		otherlv_1='implementation'
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentImplAccess().getImplementationKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentImplAccess().getCompImplNameQualifiedNameParserRuleCall_2_0());
				}
				lv_CompImplName_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentImplRule());
					}
					set(
						$current,
						"CompImplName",
						lv_CompImplName_2_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getComponentImplAccess().getColonKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentImplRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getComponentImplAccess().getSuperTypeComponentTypeCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleComponentType
entryRuleComponentType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentTypeRule()); }
	iv_ruleComponentType=ruleComponentType
	{ $current=$iv_ruleComponentType.current; }
	EOF;

// Rule ComponentType
ruleComponentType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='component'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentTypeAccess().getComponentKeyword_0());
		}
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentTypeAccess().getTypeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentTypeAccess().getCompTypeNameQualifiedNameParserRuleCall_2_0());
				}
				lv_CompTypeName_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentTypeRule());
					}
					set(
						$current,
						"CompTypeName",
						lv_CompTypeName_2_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getComponentTypeAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentTypeAccess().getComponentFeaturesComponentFeaturesDecParserRuleCall_4_0());
				}
				lv_componentFeatures_4_0=ruleComponentFeaturesDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentTypeRule());
					}
					add(
						$current,
						"componentFeatures",
						lv_componentFeatures_4_0,
						"hu.bme.mit.DepModel.ComponentFeaturesDec");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getComponentTypeAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleComponentFeaturesDec
entryRuleComponentFeaturesDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentFeaturesDecRule()); }
	iv_ruleComponentFeaturesDec=ruleComponentFeaturesDec
	{ $current=$iv_ruleComponentFeaturesDec.current; }
	EOF;

// Rule ComponentFeaturesDec
ruleComponentFeaturesDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComponentFeaturesDecAccess().getPortDecParserRuleCall_0());
		}
		this_PortDec_0=rulePortDec
		{
			$current = $this_PortDec_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentFeaturesDecAccess().getErrorModelDecParserRuleCall_1());
		}
		this_ErrorModelDec_1=ruleErrorModelDec
		{
			$current = $this_ErrorModelDec_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePortDec
entryRulePortDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortDecRule()); }
	iv_rulePortDec=rulePortDec
	{ $current=$iv_rulePortDec.current; }
	EOF;

// Rule PortDec
rulePortDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPortDecAccess().getPortInParserRuleCall_0());
		}
		this_PortIn_0=rulePortIn
		{
			$current = $this_PortIn_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPortDecAccess().getPortOutParserRuleCall_1());
		}
		this_PortOut_1=rulePortOut
		{
			$current = $this_PortOut_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePortIn
entryRulePortIn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortInRule()); }
	iv_rulePortIn=rulePortIn
	{ $current=$iv_rulePortIn.current; }
	EOF;

// Rule PortIn
rulePortIn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='port'
		{
			newLeafNode(otherlv_0, grammarAccess.getPortInAccess().getPortKeyword_0());
		}
		otherlv_1='instance'
		{
			newLeafNode(otherlv_1, grammarAccess.getPortInAccess().getInstanceKeyword_1());
		}
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getPortInAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPortInAccess().getPortInNameQualifiedNameParserRuleCall_3_0());
				}
				lv_PortInName_3_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortInRule());
					}
					set(
						$current,
						"PortInName",
						lv_PortInName_3_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getPortInAccess().getColonKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortInRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getPortInAccess().getPortInSuperTypePortTypeCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRulePortOut
entryRulePortOut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortOutRule()); }
	iv_rulePortOut=rulePortOut
	{ $current=$iv_rulePortOut.current; }
	EOF;

// Rule PortOut
rulePortOut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='port'
		{
			newLeafNode(otherlv_0, grammarAccess.getPortOutAccess().getPortKeyword_0());
		}
		otherlv_1='instance'
		{
			newLeafNode(otherlv_1, grammarAccess.getPortOutAccess().getInstanceKeyword_1());
		}
		otherlv_2='out'
		{
			newLeafNode(otherlv_2, grammarAccess.getPortOutAccess().getOutKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPortOutAccess().getPortOutNameQualifiedNameParserRuleCall_3_0());
				}
				lv_PortOutName_3_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortOutRule());
					}
					set(
						$current,
						"PortOutName",
						lv_PortOutName_3_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getPortOutAccess().getColonKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortOutRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getPortOutAccess().getPortOutSuperTypePortTypeCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleErrorModelDec
entryRuleErrorModelDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getErrorModelDecRule()); }
	iv_ruleErrorModelDec=ruleErrorModelDec
	{ $current=$iv_ruleErrorModelDec.current; }
	EOF;

// Rule ErrorModelDec
ruleErrorModelDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='error'
		{
			newLeafNode(otherlv_0, grammarAccess.getErrorModelDecAccess().getErrorKeyword_0());
		}
		otherlv_1='model'
		{
			newLeafNode(otherlv_1, grammarAccess.getErrorModelDecAccess().getModelKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getErrorModelDecAccess().getErrorModelNameQualifiedNameParserRuleCall_2_0());
				}
				lv_ErrorModelName_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getErrorModelDecRule());
					}
					set(
						$current,
						"ErrorModelName",
						lv_ErrorModelName_2_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getErrorModelDecAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getErrorModelDecAccess().getEmodelElementsErrorModelElementParserRuleCall_4_0());
				}
				lv_emodelElements_4_0=ruleErrorModelElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getErrorModelDecRule());
					}
					add(
						$current,
						"emodelElements",
						lv_emodelElements_4_0,
						"hu.bme.mit.DepModel.ErrorModelElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getErrorModelDecAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleErrorModelElement
entryRuleErrorModelElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getErrorModelElementRule()); }
	iv_ruleErrorModelElement=ruleErrorModelElement
	{ $current=$iv_ruleErrorModelElement.current; }
	EOF;

// Rule ErrorModelElement
ruleErrorModelElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getErrorModelElementAccess().getStateDecParserRuleCall_0());
		}
		this_StateDec_0=ruleStateDec
		{
			$current = $this_StateDec_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getErrorModelElementAccess().getTransitionDecParserRuleCall_1());
		}
		this_TransitionDec_1=ruleTransitionDec
		{
			$current = $this_TransitionDec_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getErrorModelElementAccess().getErrorPortDecParserRuleCall_2());
		}
		this_ErrorPortDec_2=ruleErrorPortDec
		{
			$current = $this_ErrorPortDec_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleErrorPortDec
entryRuleErrorPortDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getErrorPortDecRule()); }
	iv_ruleErrorPortDec=ruleErrorPortDec
	{ $current=$iv_ruleErrorPortDec.current; }
	EOF;

// Rule ErrorPortDec
ruleErrorPortDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getErrorPortDecAccess().getErrorPortInParserRuleCall_0());
		}
		this_ErrorPortIn_0=ruleErrorPortIn
		{
			$current = $this_ErrorPortIn_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getErrorPortDecAccess().getErrorPortOutParserRuleCall_1());
		}
		this_ErrorPortOut_1=ruleErrorPortOut
		{
			$current = $this_ErrorPortOut_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleErrorPortIn
entryRuleErrorPortIn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getErrorPortInRule()); }
	iv_ruleErrorPortIn=ruleErrorPortIn
	{ $current=$iv_ruleErrorPortIn.current; }
	EOF;

// Rule ErrorPortIn
ruleErrorPortIn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='error'
		{
			newLeafNode(otherlv_0, grammarAccess.getErrorPortInAccess().getErrorKeyword_0());
		}
		otherlv_1='port'
		{
			newLeafNode(otherlv_1, grammarAccess.getErrorPortInAccess().getPortKeyword_1());
		}
		otherlv_2='out'
		{
			newLeafNode(otherlv_2, grammarAccess.getErrorPortInAccess().getOutKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getErrorPortInAccess().getErrorPortInNameQualifiedNameParserRuleCall_3_0());
				}
				lv_ErrorPortInName_3_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getErrorPortInRule());
					}
					set(
						$current,
						"ErrorPortInName",
						lv_ErrorPortInName_3_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getErrorPortInAccess().getColonKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getErrorPortInRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getErrorPortInAccess().getErrorPortInSuperTypePortTypeCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleErrorPortOut
entryRuleErrorPortOut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getErrorPortOutRule()); }
	iv_ruleErrorPortOut=ruleErrorPortOut
	{ $current=$iv_ruleErrorPortOut.current; }
	EOF;

// Rule ErrorPortOut
ruleErrorPortOut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='error'
		{
			newLeafNode(otherlv_0, grammarAccess.getErrorPortOutAccess().getErrorKeyword_0());
		}
		otherlv_1='port'
		{
			newLeafNode(otherlv_1, grammarAccess.getErrorPortOutAccess().getPortKeyword_1());
		}
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getErrorPortOutAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getErrorPortOutAccess().getErrorPortOutNameQualifiedNameParserRuleCall_3_0());
				}
				lv_ErrorPortOutName_3_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getErrorPortOutRule());
					}
					set(
						$current,
						"ErrorPortOutName",
						lv_ErrorPortOutName_3_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getErrorPortOutAccess().getColonKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getErrorPortOutRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getErrorPortOutAccess().getErrorPortOutSuperTypePortTypeCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleStateDec
entryRuleStateDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateDecRule()); }
	iv_ruleStateDec=ruleStateDec
	{ $current=$iv_ruleStateDec.current; }
	EOF;

// Rule StateDec
ruleStateDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='error'
		{
			newLeafNode(otherlv_0, grammarAccess.getStateDecAccess().getErrorKeyword_0());
		}
		otherlv_1='state'
		{
			newLeafNode(otherlv_1, grammarAccess.getStateDecAccess().getStateKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateDecAccess().getStateNameQualifiedNameParserRuleCall_2_0());
				}
				lv_StateName_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateDecRule());
					}
					set(
						$current,
						"StateName",
						lv_StateName_2_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTransitionDec
entryRuleTransitionDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionDecRule()); }
	iv_ruleTransitionDec=ruleTransitionDec
	{ $current=$iv_ruleTransitionDec.current; }
	EOF;

// Rule TransitionDec
ruleTransitionDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='transition'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransitionDecAccess().getTransitionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransitionDecAccess().getEventNameQualifiedNameParserRuleCall_1_0());
				}
				lv_EventName_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransitionDecRule());
					}
					set(
						$current,
						"EventName",
						lv_EventName_1_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTransitionDecAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransitionDecAccess().getFeaturesTransitionFeatureDecParserRuleCall_3_0());
				}
				lv_Features_3_0=ruleTransitionFeatureDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransitionDecRule());
					}
					add(
						$current,
						"Features",
						lv_Features_3_0,
						"hu.bme.mit.DepModel.TransitionFeatureDec");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTransitionDecAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTransitionFeatureDec
entryRuleTransitionFeatureDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionFeatureDecRule()); }
	iv_ruleTransitionFeatureDec=ruleTransitionFeatureDec
	{ $current=$iv_ruleTransitionFeatureDec.current; }
	EOF;

// Rule TransitionFeatureDec
ruleTransitionFeatureDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTransitionFeatureDecAccess().getTransitionStateParserRuleCall_0());
		}
		this_TransitionState_0=ruleTransitionState
		{
			$current = $this_TransitionState_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTransitionFeatureDecAccess().getTriggerDecParserRuleCall_1());
		}
		this_TriggerDec_1=ruleTriggerDec
		{
			$current = $this_TriggerDec_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTransitionFeatureDecAccess().getActionDecParserRuleCall_2());
		}
		this_ActionDec_2=ruleActionDec
		{
			$current = $this_ActionDec_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_3='occurrence'
			{
				newLeafNode(otherlv_3, grammarAccess.getTransitionFeatureDecAccess().getOccurrenceKeyword_3_0());
			}
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTransitionFeatureDecAccess().getOccurrenceDecAction_3_1(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getTransitionFeatureDecAccess().getDOUBLEParserRuleCall_3_2());
			}
			ruleDOUBLE
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTransitionState
entryRuleTransitionState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionStateRule()); }
	iv_ruleTransitionState=ruleTransitionState
	{ $current=$iv_ruleTransitionState.current; }
	EOF;

// Rule TransitionState
ruleTransitionState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='states'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransitionStateAccess().getStatesKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionStateRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getTransitionStateAccess().getSourceStateStateDecCrossReference_1_0());
				}
			)
		)
		otherlv_2='->'
		{
			newLeafNode(otherlv_2, grammarAccess.getTransitionStateAccess().getHyphenMinusGreaterThanSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionStateRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getTransitionStateAccess().getTargetStateStateDecCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleTriggerDec
entryRuleTriggerDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTriggerDecRule()); }
	iv_ruleTriggerDec=ruleTriggerDec
	{ $current=$iv_ruleTriggerDec.current; }
	EOF;

// Rule TriggerDec
ruleTriggerDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='trigger'
		{
			newLeafNode(otherlv_0, grammarAccess.getTriggerDecAccess().getTriggerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTriggerDecAccess().getTriggerNameQualifiedNameParserRuleCall_1_0());
				}
				lv_TriggerName_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTriggerDecRule());
					}
					set(
						$current,
						"TriggerName",
						lv_TriggerName_1_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getTriggerDecAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTriggerDecRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getTriggerDecAccess().getPortInstancePortDecCrossReference_3_0());
				}
			)
		)
		otherlv_4='.'
		{
			newLeafNode(otherlv_4, grammarAccess.getTriggerDecAccess().getFullStopKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTriggerDecRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getTriggerDecAccess().getErrorModeErrorModesCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleActionDec
entryRuleActionDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionDecRule()); }
	iv_ruleActionDec=ruleActionDec
	{ $current=$iv_ruleActionDec.current; }
	EOF;

// Rule ActionDec
ruleActionDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='action'
		{
			newLeafNode(otherlv_0, grammarAccess.getActionDecAccess().getActionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionDecAccess().getActionNameQualifiedNameParserRuleCall_1_0());
				}
				lv_ActionName_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionDecRule());
					}
					set(
						$current,
						"ActionName",
						lv_ActionName_1_0,
						"hu.bme.mit.DepModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getActionDecAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionDecRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getActionDecAccess().getPortInstancePortDecCrossReference_3_0());
				}
			)
		)
		otherlv_4='.'
		{
			newLeafNode(otherlv_4, grammarAccess.getActionDecAccess().getFullStopKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionDecRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getActionDecAccess().getErrorModeErrorModesCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDOUBLE
entryRuleDOUBLE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDOUBLERule()); }
	iv_ruleDOUBLE=ruleDOUBLE
	{ $current=$iv_ruleDOUBLE.current.getText(); }
	EOF;

// Rule DOUBLE
ruleDOUBLE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOUBLEAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
