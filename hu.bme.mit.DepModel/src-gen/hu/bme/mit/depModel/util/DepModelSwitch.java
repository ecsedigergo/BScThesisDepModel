/**
 * generated by Xtext 2.9.2
 */
package hu.bme.mit.depModel.util;

import hu.bme.mit.depModel.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see hu.bme.mit.depModel.DepModelPackage
 * @generated
 */
public class DepModelSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static DepModelPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DepModelSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = DepModelPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case DepModelPackage.DEP_MODEL:
      {
        DepModel depModel = (DepModel)theEObject;
        T result = caseDepModel(depModel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.ABSTRACT_ELEMENT:
      {
        AbstractElement abstractElement = (AbstractElement)theEObject;
        T result = caseAbstractElement(abstractElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.PORT_TYPE:
      {
        PortType portType = (PortType)theEObject;
        T result = casePortType(portType);
        if (result == null) result = caseAbstractElement(portType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.ERROR_MODES:
      {
        ErrorModes errorModes = (ErrorModes)theEObject;
        T result = caseErrorModes(errorModes);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.COMPONENT_MODEL_DEC:
      {
        ComponentModelDec componentModelDec = (ComponentModelDec)theEObject;
        T result = caseComponentModelDec(componentModelDec);
        if (result == null) result = caseAbstractElement(componentModelDec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.SYSTEM_CONN_DEC:
      {
        SystemConnDec systemConnDec = (SystemConnDec)theEObject;
        T result = caseSystemConnDec(systemConnDec);
        if (result == null) result = caseComponentModelDec(systemConnDec);
        if (result == null) result = caseAbstractElement(systemConnDec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.SYSTEM_DEC:
      {
        SystemDec systemDec = (SystemDec)theEObject;
        T result = caseSystemDec(systemDec);
        if (result == null) result = caseComponentModelDec(systemDec);
        if (result == null) result = caseAbstractElement(systemDec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.SYS_FEATURES_DEC:
      {
        SysFeaturesDec sysFeaturesDec = (SysFeaturesDec)theEObject;
        T result = caseSysFeaturesDec(sysFeaturesDec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.SYSTEM_PORT_DEC:
      {
        SystemPortDec systemPortDec = (SystemPortDec)theEObject;
        T result = caseSystemPortDec(systemPortDec);
        if (result == null) result = caseSysFeaturesDec(systemPortDec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.SYSTEM_PORT_IN:
      {
        SystemPortIn systemPortIn = (SystemPortIn)theEObject;
        T result = caseSystemPortIn(systemPortIn);
        if (result == null) result = caseSystemPortDec(systemPortIn);
        if (result == null) result = caseSysFeaturesDec(systemPortIn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.SYSTEM_PORT_OUT:
      {
        SystemPortOut systemPortOut = (SystemPortOut)theEObject;
        T result = caseSystemPortOut(systemPortOut);
        if (result == null) result = caseSystemPortDec(systemPortOut);
        if (result == null) result = caseSysFeaturesDec(systemPortOut);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.COMPONENT_CONN_DEC:
      {
        ComponentConnDec componentConnDec = (ComponentConnDec)theEObject;
        T result = caseComponentConnDec(componentConnDec);
        if (result == null) result = caseSysFeaturesDec(componentConnDec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.COMPONENT_IMPL:
      {
        ComponentImpl componentImpl = (ComponentImpl)theEObject;
        T result = caseComponentImpl(componentImpl);
        if (result == null) result = caseSysFeaturesDec(componentImpl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.COMPONENT_TYPE:
      {
        ComponentType componentType = (ComponentType)theEObject;
        T result = caseComponentType(componentType);
        if (result == null) result = caseSysFeaturesDec(componentType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.COMPONENT_FEATURES_DEC:
      {
        ComponentFeaturesDec componentFeaturesDec = (ComponentFeaturesDec)theEObject;
        T result = caseComponentFeaturesDec(componentFeaturesDec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.PORT_DEC:
      {
        PortDec portDec = (PortDec)theEObject;
        T result = casePortDec(portDec);
        if (result == null) result = caseComponentFeaturesDec(portDec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.PORT_IN:
      {
        PortIn portIn = (PortIn)theEObject;
        T result = casePortIn(portIn);
        if (result == null) result = casePortDec(portIn);
        if (result == null) result = caseComponentFeaturesDec(portIn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.PORT_OUT:
      {
        PortOut portOut = (PortOut)theEObject;
        T result = casePortOut(portOut);
        if (result == null) result = casePortDec(portOut);
        if (result == null) result = caseComponentFeaturesDec(portOut);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.ERROR_MODEL_DEC:
      {
        ErrorModelDec errorModelDec = (ErrorModelDec)theEObject;
        T result = caseErrorModelDec(errorModelDec);
        if (result == null) result = caseComponentFeaturesDec(errorModelDec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.ERROR_MODEL_ELEMENT:
      {
        ErrorModelElement errorModelElement = (ErrorModelElement)theEObject;
        T result = caseErrorModelElement(errorModelElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.STATE:
      {
        State state = (State)theEObject;
        T result = caseState(state);
        if (result == null) result = caseErrorModelElement(state);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.TRANSITION_DEC:
      {
        TransitionDec transitionDec = (TransitionDec)theEObject;
        T result = caseTransitionDec(transitionDec);
        if (result == null) result = caseErrorModelElement(transitionDec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.TRANSITION_FEATURE_DEC:
      {
        TransitionFeatureDec transitionFeatureDec = (TransitionFeatureDec)theEObject;
        T result = caseTransitionFeatureDec(transitionFeatureDec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.TRANSITION_STATE:
      {
        TransitionState transitionState = (TransitionState)theEObject;
        T result = caseTransitionState(transitionState);
        if (result == null) result = caseTransitionFeatureDec(transitionState);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.TRIGGER:
      {
        Trigger trigger = (Trigger)theEObject;
        T result = caseTrigger(trigger);
        if (result == null) result = caseTransitionFeatureDec(trigger);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.ACTION:
      {
        Action action = (Action)theEObject;
        T result = caseAction(action);
        if (result == null) result = caseTransitionFeatureDec(action);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DepModelPackage.OCCURRENCE:
      {
        Occurrence occurrence = (Occurrence)theEObject;
        T result = caseOccurrence(occurrence);
        if (result == null) result = caseTransitionFeatureDec(occurrence);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Dep Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Dep Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDepModel(DepModel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Abstract Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Abstract Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAbstractElement(AbstractElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Port Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Port Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePortType(PortType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Error Modes</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Error Modes</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseErrorModes(ErrorModes object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Component Model Dec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Component Model Dec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComponentModelDec(ComponentModelDec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>System Conn Dec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>System Conn Dec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSystemConnDec(SystemConnDec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>System Dec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>System Dec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSystemDec(SystemDec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sys Features Dec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sys Features Dec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSysFeaturesDec(SysFeaturesDec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>System Port Dec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>System Port Dec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSystemPortDec(SystemPortDec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>System Port In</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>System Port In</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSystemPortIn(SystemPortIn object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>System Port Out</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>System Port Out</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSystemPortOut(SystemPortOut object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Component Conn Dec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Component Conn Dec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComponentConnDec(ComponentConnDec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Component Impl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Component Impl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComponentImpl(ComponentImpl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Component Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Component Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComponentType(ComponentType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Component Features Dec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Component Features Dec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComponentFeaturesDec(ComponentFeaturesDec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Port Dec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Port Dec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePortDec(PortDec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Port In</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Port In</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePortIn(PortIn object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Port Out</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Port Out</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePortOut(PortOut object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Error Model Dec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Error Model Dec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseErrorModelDec(ErrorModelDec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Error Model Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Error Model Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseErrorModelElement(ErrorModelElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>State</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>State</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseState(State object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Transition Dec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Transition Dec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTransitionDec(TransitionDec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Transition Feature Dec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Transition Feature Dec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTransitionFeatureDec(TransitionFeatureDec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Transition State</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Transition State</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTransitionState(TransitionState object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Trigger</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Trigger</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTrigger(Trigger object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAction(Action object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Occurrence</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Occurrence</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOccurrence(Occurrence object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //DepModelSwitch
