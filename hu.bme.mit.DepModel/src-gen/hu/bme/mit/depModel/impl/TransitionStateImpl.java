/**
 * generated by Xtext 2.9.2
 */
package hu.bme.mit.depModel.impl;

import hu.bme.mit.depModel.DepModelPackage;
import hu.bme.mit.depModel.StateDec;
import hu.bme.mit.depModel.TransitionState;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Transition State</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link hu.bme.mit.depModel.impl.TransitionStateImpl#getSourceState <em>Source State</em>}</li>
 *   <li>{@link hu.bme.mit.depModel.impl.TransitionStateImpl#getTargetState <em>Target State</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TransitionStateImpl extends TransitionFeatureDecImpl implements TransitionState
{
  /**
   * The cached value of the '{@link #getSourceState() <em>Source State</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSourceState()
   * @generated
   * @ordered
   */
  protected StateDec sourceState;

  /**
   * The cached value of the '{@link #getTargetState() <em>Target State</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTargetState()
   * @generated
   * @ordered
   */
  protected StateDec targetState;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TransitionStateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DepModelPackage.Literals.TRANSITION_STATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StateDec getSourceState()
  {
    if (sourceState != null && sourceState.eIsProxy())
    {
      InternalEObject oldSourceState = (InternalEObject)sourceState;
      sourceState = (StateDec)eResolveProxy(oldSourceState);
      if (sourceState != oldSourceState)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DepModelPackage.TRANSITION_STATE__SOURCE_STATE, oldSourceState, sourceState));
      }
    }
    return sourceState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StateDec basicGetSourceState()
  {
    return sourceState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSourceState(StateDec newSourceState)
  {
    StateDec oldSourceState = sourceState;
    sourceState = newSourceState;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DepModelPackage.TRANSITION_STATE__SOURCE_STATE, oldSourceState, sourceState));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StateDec getTargetState()
  {
    if (targetState != null && targetState.eIsProxy())
    {
      InternalEObject oldTargetState = (InternalEObject)targetState;
      targetState = (StateDec)eResolveProxy(oldTargetState);
      if (targetState != oldTargetState)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DepModelPackage.TRANSITION_STATE__TARGET_STATE, oldTargetState, targetState));
      }
    }
    return targetState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StateDec basicGetTargetState()
  {
    return targetState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTargetState(StateDec newTargetState)
  {
    StateDec oldTargetState = targetState;
    targetState = newTargetState;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DepModelPackage.TRANSITION_STATE__TARGET_STATE, oldTargetState, targetState));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DepModelPackage.TRANSITION_STATE__SOURCE_STATE:
        if (resolve) return getSourceState();
        return basicGetSourceState();
      case DepModelPackage.TRANSITION_STATE__TARGET_STATE:
        if (resolve) return getTargetState();
        return basicGetTargetState();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DepModelPackage.TRANSITION_STATE__SOURCE_STATE:
        setSourceState((StateDec)newValue);
        return;
      case DepModelPackage.TRANSITION_STATE__TARGET_STATE:
        setTargetState((StateDec)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DepModelPackage.TRANSITION_STATE__SOURCE_STATE:
        setSourceState((StateDec)null);
        return;
      case DepModelPackage.TRANSITION_STATE__TARGET_STATE:
        setTargetState((StateDec)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DepModelPackage.TRANSITION_STATE__SOURCE_STATE:
        return sourceState != null;
      case DepModelPackage.TRANSITION_STATE__TARGET_STATE:
        return targetState != null;
    }
    return super.eIsSet(featureID);
  }

} //TransitionStateImpl
