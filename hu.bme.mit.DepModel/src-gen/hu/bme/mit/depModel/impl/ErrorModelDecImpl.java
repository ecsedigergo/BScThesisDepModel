/**
 * generated by Xtext 2.9.2
 */
package hu.bme.mit.depModel.impl;

import hu.bme.mit.depModel.DepModelPackage;
import hu.bme.mit.depModel.ErrorModelDec;
import hu.bme.mit.depModel.ErrorModelElement;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Error Model Dec</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link hu.bme.mit.depModel.impl.ErrorModelDecImpl#getErrorModelName <em>Error Model Name</em>}</li>
 *   <li>{@link hu.bme.mit.depModel.impl.ErrorModelDecImpl#getEmodelElements <em>Emodel Elements</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ErrorModelDecImpl extends ComponentFeaturesDecImpl implements ErrorModelDec
{
  /**
   * The default value of the '{@link #getErrorModelName() <em>Error Model Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getErrorModelName()
   * @generated
   * @ordered
   */
  protected static final String ERROR_MODEL_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getErrorModelName() <em>Error Model Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getErrorModelName()
   * @generated
   * @ordered
   */
  protected String errorModelName = ERROR_MODEL_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getEmodelElements() <em>Emodel Elements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmodelElements()
   * @generated
   * @ordered
   */
  protected EList<ErrorModelElement> emodelElements;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ErrorModelDecImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DepModelPackage.Literals.ERROR_MODEL_DEC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getErrorModelName()
  {
    return errorModelName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setErrorModelName(String newErrorModelName)
  {
    String oldErrorModelName = errorModelName;
    errorModelName = newErrorModelName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DepModelPackage.ERROR_MODEL_DEC__ERROR_MODEL_NAME, oldErrorModelName, errorModelName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ErrorModelElement> getEmodelElements()
  {
    if (emodelElements == null)
    {
      emodelElements = new EObjectContainmentEList<ErrorModelElement>(ErrorModelElement.class, this, DepModelPackage.ERROR_MODEL_DEC__EMODEL_ELEMENTS);
    }
    return emodelElements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DepModelPackage.ERROR_MODEL_DEC__EMODEL_ELEMENTS:
        return ((InternalEList<?>)getEmodelElements()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DepModelPackage.ERROR_MODEL_DEC__ERROR_MODEL_NAME:
        return getErrorModelName();
      case DepModelPackage.ERROR_MODEL_DEC__EMODEL_ELEMENTS:
        return getEmodelElements();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DepModelPackage.ERROR_MODEL_DEC__ERROR_MODEL_NAME:
        setErrorModelName((String)newValue);
        return;
      case DepModelPackage.ERROR_MODEL_DEC__EMODEL_ELEMENTS:
        getEmodelElements().clear();
        getEmodelElements().addAll((Collection<? extends ErrorModelElement>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DepModelPackage.ERROR_MODEL_DEC__ERROR_MODEL_NAME:
        setErrorModelName(ERROR_MODEL_NAME_EDEFAULT);
        return;
      case DepModelPackage.ERROR_MODEL_DEC__EMODEL_ELEMENTS:
        getEmodelElements().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DepModelPackage.ERROR_MODEL_DEC__ERROR_MODEL_NAME:
        return ERROR_MODEL_NAME_EDEFAULT == null ? errorModelName != null : !ERROR_MODEL_NAME_EDEFAULT.equals(errorModelName);
      case DepModelPackage.ERROR_MODEL_DEC__EMODEL_ELEMENTS:
        return emodelElements != null && !emodelElements.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (ErrorModelName: ");
    result.append(errorModelName);
    result.append(')');
    return result.toString();
  }

} //ErrorModelDecImpl
