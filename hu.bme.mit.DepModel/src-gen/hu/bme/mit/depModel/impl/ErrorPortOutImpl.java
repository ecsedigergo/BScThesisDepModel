/**
 * generated by Xtext 2.9.2
 */
package hu.bme.mit.depModel.impl;

import hu.bme.mit.depModel.DepModelPackage;
import hu.bme.mit.depModel.ErrorPortOut;
import hu.bme.mit.depModel.PortType;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Error Port Out</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link hu.bme.mit.depModel.impl.ErrorPortOutImpl#getErrorPortOutName <em>Error Port Out Name</em>}</li>
 *   <li>{@link hu.bme.mit.depModel.impl.ErrorPortOutImpl#getErrorPortOutSuperType <em>Error Port Out Super Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ErrorPortOutImpl extends ErrorPortDecImpl implements ErrorPortOut
{
  /**
   * The default value of the '{@link #getErrorPortOutName() <em>Error Port Out Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getErrorPortOutName()
   * @generated
   * @ordered
   */
  protected static final String ERROR_PORT_OUT_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getErrorPortOutName() <em>Error Port Out Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getErrorPortOutName()
   * @generated
   * @ordered
   */
  protected String errorPortOutName = ERROR_PORT_OUT_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getErrorPortOutSuperType() <em>Error Port Out Super Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getErrorPortOutSuperType()
   * @generated
   * @ordered
   */
  protected PortType errorPortOutSuperType;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ErrorPortOutImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DepModelPackage.Literals.ERROR_PORT_OUT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getErrorPortOutName()
  {
    return errorPortOutName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setErrorPortOutName(String newErrorPortOutName)
  {
    String oldErrorPortOutName = errorPortOutName;
    errorPortOutName = newErrorPortOutName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DepModelPackage.ERROR_PORT_OUT__ERROR_PORT_OUT_NAME, oldErrorPortOutName, errorPortOutName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PortType getErrorPortOutSuperType()
  {
    if (errorPortOutSuperType != null && errorPortOutSuperType.eIsProxy())
    {
      InternalEObject oldErrorPortOutSuperType = (InternalEObject)errorPortOutSuperType;
      errorPortOutSuperType = (PortType)eResolveProxy(oldErrorPortOutSuperType);
      if (errorPortOutSuperType != oldErrorPortOutSuperType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DepModelPackage.ERROR_PORT_OUT__ERROR_PORT_OUT_SUPER_TYPE, oldErrorPortOutSuperType, errorPortOutSuperType));
      }
    }
    return errorPortOutSuperType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PortType basicGetErrorPortOutSuperType()
  {
    return errorPortOutSuperType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setErrorPortOutSuperType(PortType newErrorPortOutSuperType)
  {
    PortType oldErrorPortOutSuperType = errorPortOutSuperType;
    errorPortOutSuperType = newErrorPortOutSuperType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DepModelPackage.ERROR_PORT_OUT__ERROR_PORT_OUT_SUPER_TYPE, oldErrorPortOutSuperType, errorPortOutSuperType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DepModelPackage.ERROR_PORT_OUT__ERROR_PORT_OUT_NAME:
        return getErrorPortOutName();
      case DepModelPackage.ERROR_PORT_OUT__ERROR_PORT_OUT_SUPER_TYPE:
        if (resolve) return getErrorPortOutSuperType();
        return basicGetErrorPortOutSuperType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DepModelPackage.ERROR_PORT_OUT__ERROR_PORT_OUT_NAME:
        setErrorPortOutName((String)newValue);
        return;
      case DepModelPackage.ERROR_PORT_OUT__ERROR_PORT_OUT_SUPER_TYPE:
        setErrorPortOutSuperType((PortType)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DepModelPackage.ERROR_PORT_OUT__ERROR_PORT_OUT_NAME:
        setErrorPortOutName(ERROR_PORT_OUT_NAME_EDEFAULT);
        return;
      case DepModelPackage.ERROR_PORT_OUT__ERROR_PORT_OUT_SUPER_TYPE:
        setErrorPortOutSuperType((PortType)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DepModelPackage.ERROR_PORT_OUT__ERROR_PORT_OUT_NAME:
        return ERROR_PORT_OUT_NAME_EDEFAULT == null ? errorPortOutName != null : !ERROR_PORT_OUT_NAME_EDEFAULT.equals(errorPortOutName);
      case DepModelPackage.ERROR_PORT_OUT__ERROR_PORT_OUT_SUPER_TYPE:
        return errorPortOutSuperType != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (ErrorPortOutName: ");
    result.append(errorPortOutName);
    result.append(')');
    return result.toString();
  }

} //ErrorPortOutImpl
