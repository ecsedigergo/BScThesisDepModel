/**
 * generated by Xtext 2.9.2
 */
package hu.bme.mit.depModel.impl;

import hu.bme.mit.depModel.ComponentImpl;
import hu.bme.mit.depModel.DepModelPackage;
import hu.bme.mit.depModel.PortIn;
import hu.bme.mit.depModel.SystemPortIn;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>System Port In</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link hu.bme.mit.depModel.impl.SystemPortInImpl#getSysPortInName <em>Sys Port In Name</em>}</li>
 *   <li>{@link hu.bme.mit.depModel.impl.SystemPortInImpl#getInComp <em>In Comp</em>}</li>
 *   <li>{@link hu.bme.mit.depModel.impl.SystemPortInImpl#getInPort <em>In Port</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SystemPortInImpl extends SystemPortDecImpl implements SystemPortIn
{
  /**
   * The default value of the '{@link #getSysPortInName() <em>Sys Port In Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSysPortInName()
   * @generated
   * @ordered
   */
  protected static final String SYS_PORT_IN_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSysPortInName() <em>Sys Port In Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSysPortInName()
   * @generated
   * @ordered
   */
  protected String sysPortInName = SYS_PORT_IN_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getInComp() <em>In Comp</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInComp()
   * @generated
   * @ordered
   */
  protected ComponentImpl inComp;

  /**
   * The cached value of the '{@link #getInPort() <em>In Port</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInPort()
   * @generated
   * @ordered
   */
  protected PortIn inPort;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SystemPortInImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DepModelPackage.Literals.SYSTEM_PORT_IN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSysPortInName()
  {
    return sysPortInName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSysPortInName(String newSysPortInName)
  {
    String oldSysPortInName = sysPortInName;
    sysPortInName = newSysPortInName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DepModelPackage.SYSTEM_PORT_IN__SYS_PORT_IN_NAME, oldSysPortInName, sysPortInName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentImpl getInComp()
  {
    if (inComp != null && inComp.eIsProxy())
    {
      InternalEObject oldInComp = (InternalEObject)inComp;
      inComp = (ComponentImpl)eResolveProxy(oldInComp);
      if (inComp != oldInComp)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DepModelPackage.SYSTEM_PORT_IN__IN_COMP, oldInComp, inComp));
      }
    }
    return inComp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentImpl basicGetInComp()
  {
    return inComp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInComp(ComponentImpl newInComp)
  {
    ComponentImpl oldInComp = inComp;
    inComp = newInComp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DepModelPackage.SYSTEM_PORT_IN__IN_COMP, oldInComp, inComp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PortIn getInPort()
  {
    if (inPort != null && inPort.eIsProxy())
    {
      InternalEObject oldInPort = (InternalEObject)inPort;
      inPort = (PortIn)eResolveProxy(oldInPort);
      if (inPort != oldInPort)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DepModelPackage.SYSTEM_PORT_IN__IN_PORT, oldInPort, inPort));
      }
    }
    return inPort;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PortIn basicGetInPort()
  {
    return inPort;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInPort(PortIn newInPort)
  {
    PortIn oldInPort = inPort;
    inPort = newInPort;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DepModelPackage.SYSTEM_PORT_IN__IN_PORT, oldInPort, inPort));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DepModelPackage.SYSTEM_PORT_IN__SYS_PORT_IN_NAME:
        return getSysPortInName();
      case DepModelPackage.SYSTEM_PORT_IN__IN_COMP:
        if (resolve) return getInComp();
        return basicGetInComp();
      case DepModelPackage.SYSTEM_PORT_IN__IN_PORT:
        if (resolve) return getInPort();
        return basicGetInPort();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DepModelPackage.SYSTEM_PORT_IN__SYS_PORT_IN_NAME:
        setSysPortInName((String)newValue);
        return;
      case DepModelPackage.SYSTEM_PORT_IN__IN_COMP:
        setInComp((ComponentImpl)newValue);
        return;
      case DepModelPackage.SYSTEM_PORT_IN__IN_PORT:
        setInPort((PortIn)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DepModelPackage.SYSTEM_PORT_IN__SYS_PORT_IN_NAME:
        setSysPortInName(SYS_PORT_IN_NAME_EDEFAULT);
        return;
      case DepModelPackage.SYSTEM_PORT_IN__IN_COMP:
        setInComp((ComponentImpl)null);
        return;
      case DepModelPackage.SYSTEM_PORT_IN__IN_PORT:
        setInPort((PortIn)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DepModelPackage.SYSTEM_PORT_IN__SYS_PORT_IN_NAME:
        return SYS_PORT_IN_NAME_EDEFAULT == null ? sysPortInName != null : !SYS_PORT_IN_NAME_EDEFAULT.equals(sysPortInName);
      case DepModelPackage.SYSTEM_PORT_IN__IN_COMP:
        return inComp != null;
      case DepModelPackage.SYSTEM_PORT_IN__IN_PORT:
        return inPort != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (SysPortInName: ");
    result.append(sysPortInName);
    result.append(')');
    return result.toString();
  }

} //SystemPortInImpl
